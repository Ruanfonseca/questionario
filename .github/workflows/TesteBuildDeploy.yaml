name: Teste & Build & Deploy

on:

  workflow_dispatch:
  push:
  pull_request:
  
env:
  JAVA_VERSAO: '17'
  JAVA_DISTRIBUICAO: 'temurin'
  NODE_VERSAO: '16'
  BACKEND_NOME_DIRETORIO: 'backend'
  FRONTEND_NOME_DIRETORIO: 'frontend'
      
jobs:

  montagem:
  
    name: Montagem e DockerHub (se for pra branch principal)
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Angular (cache do diretório .angular/cache)
        uses: actions/cache@v3
        with:
          path: ${{ env.FRONTEND_NOME_DIRETORIO }}/.angular/cache
          key: ${{ runner.os }}-angular
         
      - name: Node (setup)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSAO }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_NOME_DIRETORIO }}/package-lock.json
          
      - name: Angular (build do projeto e adição dos arquivos estáticos ao back-end)
        run: cd ${{ env.FRONTEND_NOME_DIRETORIO }} && npm ci && npm install -g @angular/cli && ng config cli.cache.environment all && ng build
             && cp dist/*/* ../${{ env.BACKEND_NOME_DIRETORIO }}/src/main/resources/static
      
      - name: Back-End (criação do .jar da aplicação e cópia da JDK para o diretório do projeto)
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUICAO }}
          java-version: ${{ env.JAVA_VERSAO }}
          cache: 'maven'
      - name: Build with Maven
        run: cd ${{ env.BACKEND_NOME_DIRETORIO }} && ls src/main/resources/static && mvn package && cd .. &&
             mkdir jdk && cp -r $JAVA_HOME/* jdk &&
             echo "JDK_LOCALIZACAO=jdk" >> $GITHUB_ENV &&
             echo "APP_LOCALIZACAO=$(ls ${{ env.BACKEND_NOME_DIRETORIO }}/target/*.jar)" >> $GITHUB_ENV
             
      - name: Docker Buildx (configuração)
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
        uses: docker/setup-buildx-action@v2.5.0
      
      - name: Docker Hub (login)
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Docker (build da imagem e deploy no Docker Hub)
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile_GHActions
          build-args: |
            JDK_LOCALIZACAO=${{ env.JDK_LOCALIZACAO }}
            APP_LOCALIZACAO=${{ env.APP_LOCALIZACAO }}
          push: true
          tags: ${{ vars.DOCKERHUB_USER }}/calangodev:latest
        
  deploy_flyio:
  
    name: Deploy no Fly.io (se for pra branch principal)
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master'
    needs:
      - montagem
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Fly.io (setup)
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Fly.io (deploy)
        run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
